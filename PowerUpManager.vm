function PowerUpManager.new 2
push constant 3
call Memory.alloc 1
pop pointer 0
push constant 5
pop this 2
push constant 0
pop this 1
push this 2
call Array.new 1
pop this 0
push constant 0
pop local 0
label WHILE_EXP0
push local 0
push this 2
lt
not
if-goto WHILE_END0
push local 0
push this 0
add
push constant 0
pop temp 0
pop pointer 1
push temp 0
pop that 0
push local 0
push constant 1
add
pop local 0
goto WHILE_EXP0
label WHILE_END0
push pointer 0
return
function PowerUpManager.spawn 2
push argument 0
pop pointer 0
push constant 0
pop local 0
label WHILE_EXP0
push local 0
push this 1
lt
not
if-goto WHILE_END0
push local 0
push this 0
add
pop pointer 1
push that 0
pop local 1
push local 1
push constant 0
eq
not
push local 1
call PowerUp.isActive 1
not
and
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push local 1
push argument 1
push argument 2
call PowerUp.spawn 3
pop temp 0
push constant 0
return
label IF_FALSE0
push local 0
push constant 1
add
pop local 0
goto WHILE_EXP0
label WHILE_END0
push this 1
push this 2
lt
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
call PowerUp.new 0
pop local 1
push local 1
push argument 1
push argument 2
call PowerUp.spawn 3
pop temp 0
push this 1
push this 0
add
push local 1
pop temp 0
pop pointer 1
push temp 0
pop that 0
push this 1
push constant 1
add
pop this 1
label IF_FALSE1
push constant 0
return
function PowerUpManager.update 2
push argument 0
pop pointer 0
push constant 0
pop local 0
label WHILE_EXP0
push local 0
push this 1
lt
not
if-goto WHILE_END0
push local 0
push this 0
add
pop pointer 1
push that 0
pop local 1
push local 1
push constant 0
eq
not
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push local 1
call PowerUp.update 1
pop temp 0
label IF_FALSE0
push local 0
push constant 1
add
pop local 0
goto WHILE_EXP0
label WHILE_END0
push constant 0
return
function PowerUpManager.draw 2
push argument 0
pop pointer 0
push constant 0
pop local 0
label WHILE_EXP0
push local 0
push this 1
lt
not
if-goto WHILE_END0
push local 0
push this 0
add
pop pointer 1
push that 0
pop local 1
push local 1
push constant 0
eq
not
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push local 1
call PowerUp.draw 1
pop temp 0
label IF_FALSE0
push local 0
push constant 1
add
pop local 0
goto WHILE_EXP0
label WHILE_END0
push constant 0
return
function PowerUpManager.clearAll 2
push argument 0
pop pointer 0
push constant 0
pop local 0
label WHILE_EXP0
push local 0
push this 1
lt
not
if-goto WHILE_END0
push local 0
push this 0
add
pop pointer 1
push that 0
pop local 1
push local 1
push constant 0
eq
not
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push local 1
call PowerUp.isActive 1
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push local 1
call PowerUp.erase 1
pop temp 0
label IF_FALSE1
label IF_FALSE0
push local 0
push constant 1
add
pop local 0
goto WHILE_EXP0
label WHILE_END0
push constant 0
return
function PowerUpManager.getCount 0
push argument 0
pop pointer 0
push this 1
return
function PowerUpManager.getPowerUp 0
push argument 0
pop pointer 0
push argument 1
push this 1
lt
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push argument 1
push this 0
add
pop pointer 1
push that 0
return
label IF_FALSE0
push constant 0
return
function PowerUpManager.dispose 2
push argument 0
pop pointer 0
push constant 0
pop local 0
label WHILE_EXP0
push local 0
push this 1
lt
not
if-goto WHILE_END0
push local 0
push this 0
add
pop pointer 1
push that 0
pop local 1
push local 1
push constant 0
eq
not
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push local 1
call PowerUp.dispose 1
pop temp 0
label IF_FALSE0
push local 0
push constant 1
add
pop local 0
goto WHILE_EXP0
label WHILE_END0
push this 0
call Array.dispose 1
pop temp 0
push pointer 0
call Memory.deAlloc 1
pop temp 0
push constant 0
return
