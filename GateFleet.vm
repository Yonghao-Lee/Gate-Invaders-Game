function GateFleet.new 0
push constant 5
call Memory.alloc 1
pop pointer 0
push constant 40
call Array.new 1
pop this 0
push constant 0
pop this 1
push constant 1
pop this 2
push constant 0
pop this 3
push constant 30
pop this 4
push pointer 0
push constant 1
call GateFleet.reset 2
pop temp 0
push pointer 0
return
function GateFleet.reset 5
push argument 0
pop pointer 0
push constant 0
pop local 0
label WHILE_EXP0
push local 0
push this 1
lt
not
if-goto WHILE_END0
push local 0
push this 0
add
pop pointer 1
push that 0
pop local 4
push local 4
call Gate.dispose 1
pop temp 0
push local 0
push constant 1
add
pop local 0
goto WHILE_EXP0
label WHILE_END0
push constant 0
pop this 1
push constant 1
pop this 2
push constant 10
push constant 35
push argument 1
push constant 5
call Math.multiply 2
sub
call Math.max 2
pop this 4
push argument 1
push constant 1
eq
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push constant 0
pop local 1
label WHILE_EXP1
push local 1
push constant 3
lt
not
if-goto WHILE_END1
push constant 0
pop local 0
push constant 8
pop local 3
label WHILE_EXP2
push local 0
push local 3
lt
not
if-goto WHILE_END2
push local 1
pop local 2
push constant 120
push local 0
push constant 35
call Math.multiply 2
add
push constant 30
push local 1
push constant 30
call Math.multiply 2
add
push local 2
call Gate.new 3
pop local 4
push this 1
push this 0
add
push local 4
pop temp 0
pop pointer 1
push temp 0
pop that 0
push this 1
push constant 1
add
pop this 1
push local 0
push constant 1
add
pop local 0
goto WHILE_EXP2
label WHILE_END2
push local 1
push constant 1
add
pop local 1
goto WHILE_EXP1
label WHILE_END1
label IF_FALSE0
push argument 1
push constant 2
eq
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push constant 0
pop local 1
label WHILE_EXP3
push local 1
push constant 4
lt
not
if-goto WHILE_END3
push constant 0
pop local 0
push constant 7
pop local 3
label WHILE_EXP4
push local 0
push local 3
lt
not
if-goto WHILE_END4
push local 1
push constant 0
eq
if-goto IF_TRUE2
goto IF_FALSE2
label IF_TRUE2
push constant 3
pop local 2
label IF_FALSE2
push local 1
push constant 1
eq
if-goto IF_TRUE3
goto IF_FALSE3
label IF_TRUE3
push constant 4
pop local 2
label IF_FALSE3
push local 1
push constant 2
eq
if-goto IF_TRUE4
goto IF_FALSE4
label IF_TRUE4
push constant 1
pop local 2
label IF_FALSE4
push local 1
push constant 3
eq
if-goto IF_TRUE5
goto IF_FALSE5
label IF_TRUE5
push constant 2
pop local 2
label IF_FALSE5
push constant 140
push local 0
push constant 35
call Math.multiply 2
add
push constant 30
push local 1
push constant 30
call Math.multiply 2
add
push local 2
call Gate.new 3
pop local 4
push this 1
push this 0
add
push local 4
pop temp 0
pop pointer 1
push temp 0
pop that 0
push this 1
push constant 1
add
pop this 1
push local 0
push constant 1
add
pop local 0
goto WHILE_EXP4
label WHILE_END4
push local 1
push constant 1
add
pop local 1
goto WHILE_EXP3
label WHILE_END3
label IF_FALSE1
push argument 1
push constant 3
eq
if-goto IF_TRUE6
goto IF_FALSE6
label IF_TRUE6
push constant 0
pop local 1
label WHILE_EXP5
push local 1
push constant 4
lt
not
if-goto WHILE_END5
push constant 0
pop local 0
push constant 6
pop local 3
label WHILE_EXP6
push local 0
push local 3
lt
not
if-goto WHILE_END6
push local 1
push constant 0
eq
if-goto IF_TRUE7
goto IF_FALSE7
label IF_TRUE7
push constant 5
pop local 2
label IF_FALSE7
push local 1
push constant 1
eq
if-goto IF_TRUE8
goto IF_FALSE8
label IF_TRUE8
push constant 6
pop local 2
label IF_FALSE8
push local 1
push constant 2
eq
if-goto IF_TRUE9
goto IF_FALSE9
label IF_TRUE9
push constant 4
pop local 2
label IF_FALSE9
push local 1
push constant 3
eq
if-goto IF_TRUE10
goto IF_FALSE10
label IF_TRUE10
push constant 3
pop local 2
label IF_FALSE10
push constant 160
push local 0
push constant 35
call Math.multiply 2
add
push constant 30
push local 1
push constant 30
call Math.multiply 2
add
push local 2
call Gate.new 3
pop local 4
push this 1
push this 0
add
push local 4
pop temp 0
pop pointer 1
push temp 0
pop that 0
push this 1
push constant 1
add
pop this 1
push local 0
push constant 1
add
pop local 0
goto WHILE_EXP6
label WHILE_END6
push local 1
push constant 1
add
pop local 1
goto WHILE_EXP5
label WHILE_END5
label IF_FALSE6
push argument 1
push constant 4
eq
if-goto IF_TRUE11
goto IF_FALSE11
label IF_TRUE11
push constant 0
pop local 1
label WHILE_EXP7
push local 1
push constant 4
lt
not
if-goto WHILE_END7
push constant 0
pop local 0
push constant 6
pop local 3
label WHILE_EXP8
push local 0
push local 3
lt
not
if-goto WHILE_END8
push local 1
push constant 0
eq
if-goto IF_TRUE12
goto IF_FALSE12
label IF_TRUE12
push constant 7
pop local 2
label IF_FALSE12
push local 1
push constant 1
eq
if-goto IF_TRUE13
goto IF_FALSE13
label IF_TRUE13
push constant 5
pop local 2
label IF_FALSE13
push local 1
push constant 2
eq
if-goto IF_TRUE14
goto IF_FALSE14
label IF_TRUE14
push constant 6
pop local 2
label IF_FALSE14
push local 1
push constant 3
eq
if-goto IF_TRUE15
goto IF_FALSE15
label IF_TRUE15
push constant 4
pop local 2
label IF_FALSE15
push constant 160
push local 0
push constant 35
call Math.multiply 2
add
push constant 30
push local 1
push constant 30
call Math.multiply 2
add
push local 2
call Gate.new 3
pop local 4
push this 1
push this 0
add
push local 4
pop temp 0
pop pointer 1
push temp 0
pop that 0
push this 1
push constant 1
add
pop this 1
push local 0
push constant 1
add
pop local 0
goto WHILE_EXP8
label WHILE_END8
push local 1
push constant 1
add
pop local 1
goto WHILE_EXP7
label WHILE_END7
label IF_FALSE11
push argument 1
push constant 4
gt
if-goto IF_TRUE16
goto IF_FALSE16
label IF_TRUE16
push constant 0
pop local 1
label WHILE_EXP9
push local 1
push constant 5
lt
not
if-goto WHILE_END9
push constant 0
pop local 0
push constant 5
pop local 3
label WHILE_EXP10
push local 0
push local 3
lt
not
if-goto WHILE_END10
push constant 8
call Utils.random 1
pop local 2
push constant 180
push local 0
push constant 35
call Math.multiply 2
add
push constant 20
push local 1
push constant 30
call Math.multiply 2
add
push local 2
call Gate.new 3
pop local 4
push this 1
push this 0
add
push local 4
pop temp 0
pop pointer 1
push temp 0
pop that 0
push this 1
push constant 1
add
pop this 1
push local 0
push constant 1
add
pop local 0
goto WHILE_EXP10
label WHILE_END10
push local 1
push constant 1
add
pop local 1
goto WHILE_EXP9
label WHILE_END9
label IF_FALSE16
push constant 0
return
function GateFleet.update 3
push argument 0
pop pointer 0
push this 3
push constant 1
add
pop this 3
push this 3
push this 4
gt
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push constant 0
pop this 3
push constant 0
pop local 2
push constant 0
pop local 0
label WHILE_EXP0
push local 0
push this 1
lt
not
if-goto WHILE_END0
push local 0
push this 0
add
pop pointer 1
push that 0
pop local 1
push local 1
call Gate.isAlive 1
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push local 1
call Gate.getX 1
push constant 17
lt
push this 2
push constant 1
neg
eq
and
push local 1
call Gate.getX 1
push constant 467
gt
push this 2
push constant 1
eq
and
or
if-goto IF_TRUE2
goto IF_FALSE2
label IF_TRUE2
push constant 0
not
pop local 2
label IF_FALSE2
label IF_FALSE1
push local 0
push constant 1
add
pop local 0
goto WHILE_EXP0
label WHILE_END0
push local 2
if-goto IF_TRUE3
goto IF_FALSE3
label IF_TRUE3
push this 2
neg
pop this 2
push constant 0
pop local 0
label WHILE_EXP1
push local 0
push this 1
lt
not
if-goto WHILE_END1
push local 0
push this 0
add
pop pointer 1
push that 0
pop local 1
push local 1
call Gate.isAlive 1
if-goto IF_TRUE4
goto IF_FALSE4
label IF_TRUE4
push local 1
push constant 0
push constant 20
call Gate.move 3
pop temp 0
label IF_FALSE4
push local 0
push constant 1
add
pop local 0
goto WHILE_EXP1
label WHILE_END1
goto IF_END3
label IF_FALSE3
push constant 0
pop local 0
label WHILE_EXP2
push local 0
push this 1
lt
not
if-goto WHILE_END2
push local 0
push this 0
add
pop pointer 1
push that 0
pop local 1
push local 1
call Gate.isAlive 1
if-goto IF_TRUE5
goto IF_FALSE5
label IF_TRUE5
push local 1
push this 2
push constant 12
call Math.multiply 2
push constant 0
call Gate.move 3
pop temp 0
label IF_FALSE5
push local 0
push constant 1
add
pop local 0
goto WHILE_EXP2
label WHILE_END2
label IF_END3
label IF_FALSE0
push constant 0
pop local 0
label WHILE_EXP3
push local 0
push this 1
lt
not
if-goto WHILE_END3
push local 0
push this 0
add
pop pointer 1
push that 0
pop local 1
push local 1
call Gate.isAlive 1
if-goto IF_TRUE6
goto IF_FALSE6
label IF_TRUE6
push local 1
push argument 1
call Gate.update 2
pop temp 0
label IF_FALSE6
push local 0
push constant 1
add
pop local 0
goto WHILE_EXP3
label WHILE_END3
push constant 0
return
function GateFleet.draw 2
push argument 0
pop pointer 0
push constant 0
pop local 0
label WHILE_EXP0
push local 0
push this 1
lt
not
if-goto WHILE_END0
push local 0
push this 0
add
pop pointer 1
push that 0
pop local 1
push local 1
call Gate.isAlive 1
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push local 1
call Gate.draw 1
pop temp 0
label IF_FALSE0
push local 0
push constant 1
add
pop local 0
goto WHILE_EXP0
label WHILE_END0
push constant 0
return
function GateFleet.shootBullet 5
push argument 0
pop pointer 0
push this 1
call Array.new 1
pop local 3
push constant 0
pop local 1
push constant 0
pop local 0
label WHILE_EXP0
push local 0
push this 1
lt
not
if-goto WHILE_END0
push local 0
push this 0
add
pop pointer 1
push that 0
pop local 4
push local 4
call Gate.isAlive 1
push pointer 0
push local 0
call GateFleet.isBottomGate 2
and
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push local 1
push local 3
add
push local 0
pop temp 0
pop pointer 1
push temp 0
pop that 0
push local 1
push constant 1
add
pop local 1
label IF_FALSE0
push local 0
push constant 1
add
pop local 0
goto WHILE_EXP0
label WHILE_END0
push local 1
push constant 0
gt
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push local 1
call Utils.random 1
push local 3
add
pop pointer 1
push that 0
pop local 2
push local 2
push this 0
add
pop pointer 1
push that 0
pop local 4
push argument 1
push local 4
call Gate.getX 1
push constant 16
add
push local 4
call Gate.getY 1
push constant 24
add
call BulletManager.addAlienBullet 3
pop temp 0
label IF_FALSE1
push local 3
call Array.dispose 1
pop temp 0
push constant 0
return
function GateFleet.isBottomGate 5
push argument 0
pop pointer 0
push argument 1
push this 0
add
pop pointer 1
push that 0
pop local 3
push local 3
call Gate.getX 1
pop local 1
push local 3
call Gate.getY 1
pop local 2
push constant 0
pop local 0
label WHILE_EXP0
push local 0
push this 1
lt
not
if-goto WHILE_END0
push local 0
push this 0
add
pop pointer 1
push that 0
pop local 4
push local 4
call Gate.isAlive 1
push local 4
call Gate.getX 1
push local 1
sub
call Math.abs 1
push constant 30
lt
and
push local 4
call Gate.getY 1
push local 2
gt
and
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push constant 0
return
label IF_FALSE0
push local 0
push constant 1
add
pop local 0
goto WHILE_EXP0
label WHILE_END0
push constant 0
not
return
function GateFleet.isEmpty 2
push argument 0
pop pointer 0
push constant 0
pop local 0
label WHILE_EXP0
push local 0
push this 1
lt
not
if-goto WHILE_END0
push local 0
push this 0
add
pop pointer 1
push that 0
pop local 1
push local 1
call Gate.isAlive 1
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push constant 0
return
label IF_FALSE0
push local 0
push constant 1
add
pop local 0
goto WHILE_EXP0
label WHILE_END0
push constant 0
not
return
function GateFleet.getLowestY 3
push argument 0
pop pointer 0
push constant 0
pop local 1
push constant 0
pop local 0
label WHILE_EXP0
push local 0
push this 1
lt
not
if-goto WHILE_END0
push local 0
push this 0
add
pop pointer 1
push that 0
pop local 2
push local 2
call Gate.isAlive 1
push local 2
call Gate.getY 1
push local 1
gt
and
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push local 2
call Gate.getY 1
pop local 1
label IF_FALSE0
push local 0
push constant 1
add
pop local 0
goto WHILE_EXP0
label WHILE_END0
push local 1
return
function GateFleet.getCount 0
push argument 0
pop pointer 0
push this 1
return
function GateFleet.getGate 0
push argument 0
pop pointer 0
push argument 1
push this 0
add
pop pointer 1
push that 0
return
function GateFleet.dispose 2
push argument 0
pop pointer 0
push constant 0
pop local 0
label WHILE_EXP0
push local 0
push this 1
lt
not
if-goto WHILE_END0
push local 0
push this 0
add
pop pointer 1
push that 0
pop local 1
push local 1
call Gate.dispose 1
pop temp 0
push local 0
push constant 1
add
pop local 0
goto WHILE_EXP0
label WHILE_END0
push this 0
call Array.dispose 1
pop temp 0
push pointer 0
call Memory.deAlloc 1
pop temp 0
push constant 0
return
